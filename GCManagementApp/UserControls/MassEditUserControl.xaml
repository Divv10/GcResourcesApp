<UserControl x:Class="GCManagementApp.UserControls.MassEditUserControl" x:Name="MassEditUC"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:lib="http://schemas.thinkpixellab.com/2011/xaml/presentation"
			 xmlns:local="clr-namespace:GCManagementApp.UserControls"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:properties="clr-namespace:GCManagementApp.Properties"
			 xmlns:converters="clr-namespace:GCManagementApp.Converters"
			 xmlns:enums="clr-namespace:GCManagementApp.Enums"
			 xmlns:static="clr-namespace:GCManagementApp.Static"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 xmlns:behaviors="clr-namespace:GCManagementApp.Behaviors"
			 xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
			 mc:Ignorable="d" 
			 d:DesignHeight="450" d:DesignWidth="800">
   <UserControl.Resources>
	  <converters:HeroToImageConverter x:Key="HeroToImageConverter"/>
	  <converters:ClassToImageConverter x:Key="ClassToImageConverter"/>
	  <converters:AttributeToImageConverter x:Key="AttributeToImageConverter"/>
	  <converters:LevelToProgressValueConverter x:Key="LevelToProgressValueConverter"/>
	  <converters:AccessoryTierToIntConverter x:Key="AccessoryTierToIntConverter" />
	  <converters:AccessoryToStringConverter x:Key="AccessoryToStringConverter" />
	  <converters:SiLevelToCoreOpenStringConverter x:Key="SiLevelToCoreOpenStringConverter" />
	  <converters:SiLevelToCoreOpenVisibilityConverter x:Key="SiLevelToCoreOpenVisibilityConverter" />
	  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	  <converters:AccessorySetToBrushConverter x:Key="AccessorySetToBrushConverter" />
	  <converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
	  <converters:AccessorySetToVisibilityConverter x:Key="AccessorySetToVisibilityConverter" />
	  <converters:ArtifactTypeToBackgroundConverter x:Key="ArtifactTypeToBackgroundConverter" />
	  <converters:SILevelToMaximumTraitsConverter x:Key="SILevelToMaximumTraitsConverter" />
	  <converters:SILevelToMinimumTraitsConverter x:Key="SILevelToMinimumTraitsConverter" />
	  <materialDesign:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterMD" FalseValue="Visible" TrueValue="Collapsed" />

	  <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignCaptionTextBlock}">
		 <Setter Property="Margin" Value="5,0"/>
	  </Style>
	  <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
	  </Style>
	  <Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignToolToggleListBox}">
		 <Setter Property="Margin" Value="10,0"/>
	  </Style>
	  <Style TargetType="Slider" BasedOn="{StaticResource MaterialDesignDiscreteSlider}">
		 <Setter Property="Margin" Value="5,0"/>
		 <Setter Property="TickPlacement" Value="BottomRight"/>
		 <Setter Property="VerticalAlignment" Value="Center"/>
	  </Style>
	  <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
		 <Setter Property="Margin" Value="5,0,5,10"/>
		 <Setter Property="HorizontalAlignment" Value="Left"/>
		 <Setter Property="VerticalAlignment" Value="Bottom"/>
	  </Style>

	  <DataTemplate x:Key="SoulImprint">
		 <Grid Height="215" Width="500" Background="{DynamicResource MaterialDesignCardBackground}">
			<Grid.ColumnDefinitions>
			   <ColumnDefinition Width="130" />
			   <ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
			   <RowDefinition Height="130" />
			   <RowDefinition />
			</Grid.RowDefinitions>
			
			<Image Source="{Binding ImageName, Converter={StaticResource HeroToImageConverter}}" Margin="20,20,0,0"/>
			<Label Grid.Row="1" Content="{Binding DisplayName}" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>

			<Grid Grid.Column="1" Grid.RowSpan="2" Margin="10,0">
			   <Grid.ColumnDefinitions>
				  <ColumnDefinition />
				  <ColumnDefinition />
			   </Grid.ColumnDefinitions>
			   <Grid.RowDefinitions>
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
			   </Grid.RowDefinitions>

			   <TextBlock Text="{x:Static properties:Resources.SoulImprint}" VerticalAlignment="Center"/>
			   <TextBox Grid.Column="1" Text="{Binding SiLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />
			   <Slider Grid.Row="1" Grid.ColumnSpan="2" Maximum="{x:Static static:StaticValues.MaxSiLevel}" Value="{Binding SiLevel, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource SiBrush}" IsTabStop="False" VerticalAlignment="Center"/>

			   <TextBlock Grid.Row="2" Text="{Binding SiLevel, Converter={StaticResource SiLevelToCoreOpenStringConverter}}" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="{Binding SiLevel, Converter={StaticResource SiLevelToCoreOpenVisibilityConverter}}"/>
			   <ToggleButton Grid.Row="2" Grid.Column="1" IsChecked="{Binding IsCoreOpen}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,0,0" Visibility="{Binding SiLevel, Converter={StaticResource SiLevelToCoreOpenVisibilityConverter}}"/>

			   <TextBlock Grid.Row="2" Text="{x:Static properties:Resources.TraitsOpen}" VerticalAlignment="Center"/>
			   <TextBox Grid.Row="2"  Grid.Column="1" Text="{Binding TraitsOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />

			   <Slider Grid.Row="3" Grid.ColumnSpan="2" Value="{Binding TraitsOpen, UpdateSourceTrigger=PropertyChanged}" IsTabStop="False" VerticalAlignment="Center">
				  <Slider.Minimum>
					 <MultiBinding Converter="{StaticResource SILevelToMinimumTraitsConverter}">
						<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}" Path="DataContext.SiLevel" />
						<Binding >
						   <Binding.Source>
							  <sys:Double>0</sys:Double>
						   </Binding.Source>
						</Binding>
					 </MultiBinding>
				  </Slider.Minimum>
				  <Slider.Maximum>
					 <MultiBinding Converter="{StaticResource SILevelToMaximumTraitsConverter}">
						<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}" Path="DataContext.SiLevel" />
						<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}" Path="DataContext.IsCoreOpen"/>
					 </MultiBinding>
				  </Slider.Maximum>
			   </Slider>
			</Grid>
			<Grid Grid.Column="1" Grid.RowSpan="10" Background="{DynamicResource MaterialDesignCardBackground}" Visibility="{Binding IsOwned, Converter={StaticResource BooleanToVisibilityConverterMD}}">
			   <TextBlock Text="{x:Static properties:Resources.HeroOwned}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="40"/>
			   <ToggleButton IsChecked="{Binding IsOwned}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="60" Visibility="Visible"/>
			</Grid>
		 </Grid>
	  </DataTemplate>
	  
	  <DataTemplate x:Key="ChaserTranscendence">
		 <Grid Height="215" Width="500" Background="{DynamicResource MaterialDesignCardBackground}">
			<Grid.ColumnDefinitions>
			   <ColumnDefinition Width="130" />
			   <ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
               <RowDefinition Height="150" />
               <RowDefinition Height="30" />
               <RowDefinition />
			</Grid.RowDefinitions>

			<Image Source="{Binding ImageName, Converter={StaticResource HeroToImageConverter}}" Margin="20,20,0,0"/>
			<Label Grid.Row="1" Content="{Binding DisplayName}" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>

			<Grid Grid.Column="1" Grid.RowSpan="2" Margin="10,0">
			   <Grid.ColumnDefinitions>
				  <ColumnDefinition />
                  <ColumnDefinition />
               </Grid.ColumnDefinitions>
			   <Grid.RowDefinitions>
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
               </Grid.RowDefinitions>

			   <TextBlock Text="{x:Static properties:Resources.Chaser}" VerticalAlignment="Center"/>
			   <TextBox Grid.Column="1" Text="{Binding ChaserLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />

			   <Slider Grid.Row="1" Grid.ColumnSpan="2" Maximum="{x:Static static:StaticValues.MaxClLevel}" Value="{Binding ChaserLevel, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource ChaserBrush}" IsTabStop="False"/>
			   
			   <TextBlock Grid.Row="2" Text="{x:Static properties:Resources.Transcendence}" VerticalAlignment="Center"/>
			   <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding TranscendenceLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />

			   <Slider Grid.Row="3" Grid.ColumnSpan="2" Maximum="{x:Static static:StaticValues.MaxTranscendenceLevel}" Value="{Binding TranscendenceLevel}" Foreground="{StaticResource TranscendenceBrush}" IsTabStop="False"/>

               <TextBlock Grid.Row="4" Text="{x:Static properties:Resources.TransPercentage}" VerticalAlignment="Center"/>
               <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding TransPercentage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />

               <Slider Grid.Row="5" Grid.ColumnSpan="2" Maximum="{x:Static static:StaticValues.MaxTransPercentage}" Value="{Binding TransPercentage}" Ticks="25, 33, 50, 66, 75, 100" Foreground="{StaticResource TranscendenceBrush}" IsTabStop="False"/>
            </Grid>
			<Grid Grid.Column="1" Grid.RowSpan="10" Background="{DynamicResource MaterialDesignCardBackground}" Visibility="{Binding IsOwned, Converter={StaticResource BooleanToVisibilityConverterMD}}">
			   <TextBlock Text="{x:Static properties:Resources.HeroOwned}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="40"/>
			   <ToggleButton IsChecked="{Binding IsOwned}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="60" Visibility="Visible"/>
			</Grid>

		 </Grid>
	  </DataTemplate>
	  
	  <DataTemplate x:Key="LevelPetLevel">
         <Grid Height="215" Width="500" Background="{DynamicResource MaterialDesignCardBackground}">
			<Grid.ColumnDefinitions>
			   <ColumnDefinition Width="130" />
			   <ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
			   <RowDefinition Height="130" />
			   <RowDefinition />
			</Grid.RowDefinitions>

			<Image Source="{Binding ImageName, Converter={StaticResource HeroToImageConverter}}" Margin="20,20,0,0"/>
			<Label Grid.Row="1" Content="{Binding DisplayName}" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>

			<Grid Grid.Column="1" Grid.RowSpan="2" Margin="10,0">
			   <Grid.ColumnDefinitions>
				  <ColumnDefinition />
				  <ColumnDefinition />
			   </Grid.ColumnDefinitions>
			   <Grid.RowDefinitions>
				  <RowDefinition />
				  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
			   </Grid.RowDefinitions>
			   
			   <TextBlock Text="{x:Static properties:Resources.Level}" VerticalAlignment="Center"/>
			   <TextBox Grid.Column="1" Text="{Binding Level, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />

			   <Slider Grid.Row="1" Grid.ColumnSpan="2" Maximum="{x:Static static:StaticValues.MaxLevel}" Value="{Binding Level, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource LevelBrush}" IsTabStop="False"/>
			   
			   <TextBlock Grid.Row="2" Text="{x:Static properties:Resources.PetLevel}" VerticalAlignment="Center"/>
			   <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding PetLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />

			   <Slider Grid.Row="3" Grid.ColumnSpan="2" Maximum="{x:Static static:StaticValues.MaxPetLevel}" Value="{Binding PetLevel, UpdateSourceTrigger=PropertyChanged}" IsTabStop="False"/>
			</Grid>
			<Grid Grid.Column="1" Grid.RowSpan="10" Background="{DynamicResource MaterialDesignCardBackground}" Visibility="{Binding IsOwned, Converter={StaticResource BooleanToVisibilityConverterMD}}">
			   <TextBlock Text="{x:Static properties:Resources.HeroOwned}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="40"/>
			   <ToggleButton IsChecked="{Binding IsOwned}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="60" Visibility="Visible"/>
			</Grid>
		 </Grid>
	  </DataTemplate>

	  <DataTemplate x:Key="Accessory">
		 <Grid Height="225" Width="500" Background="{DynamicResource MaterialDesignCardBackground}">
			<Grid.ColumnDefinitions>
			   <ColumnDefinition Width="130" />
			   <ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
			   <RowDefinition Height="130" />
			   <RowDefinition />
			</Grid.RowDefinitions>

			<Image Source="{Binding ImageName, Converter={StaticResource HeroToImageConverter}}" Margin="20,20,0,0"/>
			<Label Grid.Row="1" Content="{Binding DisplayName}" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>

			<Grid Grid.Column="1" Grid.RowSpan="2" Margin="10,0">
			   <TabControl materialDesign:NavigationRailAssist.ShowSelectionBackground="True" materialDesign:ColorZoneAssist.Mode="Standard" SnapsToDevicePixels="True" Style="{StaticResource MaterialDesignNavigationRailTabControl}" TabStripPlacement="Left" VerticalAlignment="Center">
				  <TabItem>
					 <TabItem.Header>
						<materialDesign:PackIcon Kind="Ring" Width="25" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center" />
					 </TabItem.Header>
					 <Grid>
						<Grid.RowDefinitions>
						   <RowDefinition />
						   <RowDefinition />
						   <RowDefinition />
						</Grid.RowDefinitions>
						<ListBox Grid.Row="2" SelectedIndex="{Binding Ring.AccessoryTier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AccessoryTierToIntConverter}}" Style="{StaticResource MaterialDesignToolToggleListBox}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" Visibility="{Binding Ring.AccessorySet, Converter={StaticResource AccessorySetToVisibilityConverter}}">
						   <i:Interaction.Behaviors>
							  <behaviors:KeepOneItemSelectedBehavior />
						   </i:Interaction.Behaviors>
						   <ListBoxItem Content="T1" Width="60" HorizontalContentAlignment="Center"/>
						   <ListBoxItem Content="T2" Width="60" HorizontalContentAlignment="Center"/>
						   <ListBoxItem Content="T3" Width="60" HorizontalContentAlignment="Center"/>
                           <ListBoxItem Content="T4" Width="60" HorizontalContentAlignment="Center"/>
                                </ListBox>
						<local:NumericUpDown Grid.Row="1" Minimum="0" Maximum="9" Interval="1" Value="{Binding Ring.AccessoryUpgradeLevel, Mode=TwoWay}" BorderThickness="0" MinWidth="50" MinHeight="30" Foreground="{DynamicResource MaterialDesignBody}" Visibility="{Binding Ring.AccessorySet, Converter={StaticResource AccessorySetToVisibilityConverter}}" Margin="10,0,15,0"/>
						<ComboBox MinWidth="170" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,15,0"
													ItemsSource="{Binding Path=DataContext.AccessorySetValues, Mode=OneWay, Source={x:Reference MassEditUC}}"                                           
													SelectedItem="{Binding Ring.AccessorySet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						   <ComboBox.ItemTemplate>
							  <DataTemplate>
								 <Grid>
									<Grid.ColumnDefinitions>
									   <ColumnDefinition Width="20"/>
									   <ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Border HorizontalAlignment="Center" BorderThickness="1" BorderBrush="{StaticResource MaterialDesignBody}" Background="{Binding Converter={StaticResource AccessorySetToBrushConverter}}" CornerRadius="25" Width="15" Height="15" />
									<TextBlock Grid.Column="1" Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" Margin="5,0,0,0"/>
								 </Grid>
							  </DataTemplate>
						   </ComboBox.ItemTemplate>
						</ComboBox>
					 </Grid>
				  </TabItem>

				  <TabItem>
					 <TabItem.Header>
						<materialDesign:PackIcon Kind="Necklace" Width="25" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center" />
					 </TabItem.Header>
					 <Grid>
						<Grid.RowDefinitions>
						   <RowDefinition />
						   <RowDefinition />
						   <RowDefinition />
						</Grid.RowDefinitions>
						<ListBox Grid.Row="2" SelectedIndex="{Binding Necklace.AccessoryTier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AccessoryTierToIntConverter}}" Style="{StaticResource MaterialDesignToolToggleListBox}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" Visibility="{Binding Necklace.AccessorySet, Converter={StaticResource AccessorySetToVisibilityConverter}}">
						   <i:Interaction.Behaviors>
							  <behaviors:KeepOneItemSelectedBehavior />
						   </i:Interaction.Behaviors>
						   <ListBoxItem Content="T1" Width="60" HorizontalContentAlignment="Center" />
						   <ListBoxItem Content="T2" Width="60" HorizontalContentAlignment="Center" />
						   <ListBoxItem Content="T3" Width="60" HorizontalContentAlignment="Center" />
                           <ListBoxItem Content="T4" Width="60" HorizontalContentAlignment="Center"/>
                        </ListBox>
						<local:NumericUpDown Grid.Row="1" Minimum="0" Maximum="9" Interval="1" Margin="10,0,15,0" Value="{Binding Necklace.AccessoryUpgradeLevel, Mode=TwoWay}" BorderThickness="0" MinWidth="80" MinHeight="30" Foreground="{DynamicResource MaterialDesignBody}" Visibility="{Binding Necklace.AccessorySet, Converter={StaticResource AccessorySetToVisibilityConverter}}"/>
						<ComboBox Grid.Row="0" MinWidth="190" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,15,0"
													ItemsSource="{Binding Path=DataContext.AccessorySetValues, Mode=OneWay, Source={x:Reference MassEditUC}}"                                           
													SelectedItem="{Binding Necklace.AccessorySet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						   <ComboBox.ItemTemplate>
							  <DataTemplate>
								 <Grid>
									<Grid.ColumnDefinitions>
									   <ColumnDefinition Width="20"/>
									   <ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Border HorizontalAlignment="Center" BorderThickness="1" BorderBrush="{StaticResource MaterialDesignBody}" Background="{Binding Converter={StaticResource AccessorySetToBrushConverter}}" CornerRadius="25" Width="15" Height="15" />
									<TextBlock Grid.Column="1" Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" Margin="5,0,0,0"/>
								 </Grid>
							  </DataTemplate>
						   </ComboBox.ItemTemplate>
						</ComboBox>
					 </Grid>
				  </TabItem>

				  <TabItem>
					 <TabItem.Header>
						<materialDesign:PackIcon Kind="GlobeLightOutline" Width="25" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					 </TabItem.Header>
					 <Grid>
						<Grid.RowDefinitions>
						   <RowDefinition />
						   <RowDefinition />
						   <RowDefinition />
						</Grid.RowDefinitions>
						<ListBox Grid.Row="2" SelectedIndex="{Binding Earrings.AccessoryTier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AccessoryTierToIntConverter}}" Style="{StaticResource MaterialDesignToolToggleListBox}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" Visibility="{Binding Earrings.AccessorySet, Converter={StaticResource AccessorySetToVisibilityConverter}}">
						   <i:Interaction.Behaviors>
							  <behaviors:KeepOneItemSelectedBehavior />
						   </i:Interaction.Behaviors>
						   <ListBoxItem Content="T1" Width="60" HorizontalContentAlignment="Center" />
						   <ListBoxItem Content="T2" Width="60" HorizontalContentAlignment="Center" />
						   <ListBoxItem Content="T3" Width="60" HorizontalContentAlignment="Center" />
                           <ListBoxItem Content="T4" Width="60" HorizontalContentAlignment="Center"/>
						</ListBox>
						<local:NumericUpDown Grid.Row="1" Minimum="0" Maximum="9" Interval="1" Margin="10,0,15,0" Value="{Binding Earrings.AccessoryUpgradeLevel, Mode=TwoWay}" BorderThickness="0" MinWidth="80" MinHeight="30" Foreground="{DynamicResource MaterialDesignBody}" Visibility="{Binding Earrings.AccessorySet, Converter={StaticResource AccessorySetToVisibilityConverter}}"/>
						<ComboBox Grid.Row="0" MinWidth="190" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,15,0"
											  ItemsSource="{Binding Path=DataContext.AccessorySetValues, Mode=OneWay, Source={x:Reference MassEditUC}}"                                           
											  SelectedItem="{Binding Earrings.AccessorySet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						   <ComboBox.ItemTemplate>
							  <DataTemplate>
								 <Grid>
									<Grid.ColumnDefinitions>
									   <ColumnDefinition Width="20"/>
									   <ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Border HorizontalAlignment="Center" BorderThickness="1" BorderBrush="{StaticResource MaterialDesignBody}" Background="{Binding Converter={StaticResource AccessorySetToBrushConverter}}" CornerRadius="25" Width="15" Height="15" />
									<TextBlock Grid.Column="1" Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" Margin="5,0,0,0"/>
								 </Grid>
							  </DataTemplate>
						   </ComboBox.ItemTemplate>
						</ComboBox>
					 </Grid>
				  </TabItem>
			   </TabControl>
			</Grid>
			<Grid Grid.Column="1" Grid.RowSpan="10" Background="{DynamicResource MaterialDesignCardBackground}" Visibility="{Binding IsOwned, Converter={StaticResource BooleanToVisibilityConverterMD}}">
			   <TextBlock Text="{x:Static properties:Resources.HeroOwned}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="40"/>
			   <ToggleButton IsChecked="{Binding IsOwned}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="60" Visibility="Visible"/>
			</Grid>

		 </Grid>
	  </DataTemplate>

	  <DataTemplate x:Key="ExclusiveWeapon">
         <Grid Height="215" Width="500" Background="{DynamicResource MaterialDesignCardBackground}">
			<Grid.ColumnDefinitions>
			   <ColumnDefinition Width="130" />
			   <ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
			   <RowDefinition Height="130" />
			   <RowDefinition />
			</Grid.RowDefinitions>

			<Image Source="{Binding ImageName, Converter={StaticResource HeroToImageConverter}}" Margin="20,20,0,0"/>
			<Label Grid.Row="1" Content="{Binding DisplayName}" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>

			<Grid Grid.Column="1" Grid.RowSpan="2" Margin="10,0">
			   <Grid.ColumnDefinitions>
				  <ColumnDefinition />
				  <ColumnDefinition />
			   </Grid.ColumnDefinitions>
			   <Grid.RowDefinitions>
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
                  <RowDefinition />
               </Grid.RowDefinitions>

			   <TextBlock Grid.Row="0" Text="{x:Static properties:Resources.ExclusiveWeaponOwned}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
			   <ToggleButton Grid.Row="0" Grid.Column="1" IsChecked="{Binding Equipment.IsExclusiveWeaponOwned}" TabIndex="0" VerticalAlignment="Center" HorizontalAlignment="Right" />

			   <Grid Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" Visibility="{Binding Equipment.IsExclusiveWeaponOwned, Converter={StaticResource BooleanToVisibilityConverter}}">
				  <Grid.RowDefinitions>
					 <RowDefinition/>
					 <RowDefinition/>
				  </Grid.RowDefinitions>
				  <TextBlock Text="{x:Static properties:Resources.ExclusiveWeaponLevel}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
				  <TextBox Text="{Binding Equipment.ExclusiveWeaponUpgrade, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />
				  <Slider Grid.Row="2" Maximum="{x:Static static:StaticValues.MaxExclusiveWeaponUpgrade}" Value="{Binding Equipment.ExclusiveWeaponUpgrade, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTabStop="False"/>
			   </Grid>

			</Grid>
			<Grid Grid.Column="1" Grid.RowSpan="10" Background="{DynamicResource MaterialDesignCardBackground}" Visibility="{Binding IsOwned, Converter={StaticResource BooleanToVisibilityConverterMD}}">
			   <TextBlock Text="{x:Static properties:Resources.HeroOwned}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="40"/>
			   <ToggleButton IsChecked="{Binding IsOwned}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="60" Visibility="Visible"/>
			</Grid>

		 </Grid>
	  </DataTemplate>

	  <DataTemplate x:Key="Artifact">
		 <Grid Height="215" Width="500" Background="{DynamicResource MaterialDesignCardBackground}">
			<Grid.ColumnDefinitions>
			   <ColumnDefinition Width="130" />
			   <ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
			   <RowDefinition Height="130" />
			   <RowDefinition />
			</Grid.RowDefinitions>

			<Image Source="{Binding ImageName, Converter={StaticResource HeroToImageConverter}}" Margin="20,20,0,0"/>
			<Label Grid.Row="1" Content="{Binding DisplayName}" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center"/>

			<Grid Grid.Column="1" Grid.RowSpan="2" Margin="10,0">
			   <Grid.ColumnDefinitions>
				  <ColumnDefinition />
				  <ColumnDefinition Width="270"/>
			   </Grid.ColumnDefinitions>
			   <Grid.RowDefinitions>
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
				  <RowDefinition />
			   </Grid.RowDefinitions>

			   <TextBlock Text="{x:Static properties:Resources.ArtifactTier}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
			   <ComboBox Grid.Column="1" MinWidth="260" HorizontalAlignment="Right" ItemsSource="{Binding ArtifactTierValues, Mode=OneWay, Source={x:Reference MassEditUC}}" SelectedItem="{Binding Equipment.ArtifactTier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
				  <ComboBox.ItemTemplate>
					 <DataTemplate>
						<TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
					 </DataTemplate>
				  </ComboBox.ItemTemplate>
			   </ComboBox>

			   <Grid Grid.Row="1" Grid.RowSpan="4" Grid.ColumnSpan="2">
				  <Grid.Style>
					 <Style TargetType="Grid">
						<Setter Property="Visibility" Value="Visible" />
						<Style.Triggers>
						   <DataTrigger Binding="{Binding Equipment.ArtifactTier}" Value="None">
							  <Setter Property="Visibility" Value="Hidden" />
						   </DataTrigger>
						</Style.Triggers>
					 </Style>
				  </Grid.Style>
				  <Grid.RowDefinitions>
					 <RowDefinition/>
					 <RowDefinition/>
					 <RowDefinition/>
				  </Grid.RowDefinitions>
				  <TextBlock Text="{x:Static properties:Resources.ArtifactType}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
				  <ComboBox MinWidth="260" HorizontalAlignment="Right" ItemsSource="{Binding ArtifactTypeValues, Mode=OneWay, Source={x:Reference MassEditUC}}" SelectedItem="{Binding Equipment.ArtifactType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					 <ComboBox.ItemTemplate>
						<DataTemplate>
						   <Grid>
							  <Grid.ColumnDefinitions>
								 <ColumnDefinition Width="20"/>
								 <ColumnDefinition/>
							  </Grid.ColumnDefinitions>
							  <Border HorizontalAlignment="Center" BorderThickness="1" BorderBrush="{StaticResource MaterialDesignBody}" Background="{Binding Converter={StaticResource ArtifactTypeToBackgroundConverter}}" CornerRadius="25" Width="15" Height="15" />
							  <TextBlock Grid.Column="1" Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" Margin="5,0,0,0"/>
						   </Grid>
						</DataTemplate>
					 </ComboBox.ItemTemplate>
				  </ComboBox>
				  <TextBlock Grid.Row="1" Text="{x:Static properties:Resources.ArtifactLevel}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
				  <TextBox Grid.Row="1" Text="{Binding Equipment.ArtifactUpgrade, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="40" HorizontalContentAlignment="Center" />
				  <Slider Grid.Row="2" Maximum="{x:Static static:StaticValues.MaxArtifactUpgrade}" Value="{Binding Equipment.ArtifactUpgrade, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTabStop="False"/>
			   </Grid>

			</Grid>
			<Grid Grid.Column="1" Grid.RowSpan="10" Background="{DynamicResource MaterialDesignCardBackground}" Visibility="{Binding IsOwned, Converter={StaticResource BooleanToVisibilityConverterMD}}">
			   <TextBlock Text="{x:Static properties:Resources.HeroOwned}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="40"/>
			   <ToggleButton IsChecked="{Binding IsOwned}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="60" Visibility="Visible"/>
			</Grid>

		 </Grid>
	  </DataTemplate>
   </UserControl.Resources>
   
   
	<Grid>
	  <Grid.RowDefinitions>
		 <RowDefinition Height="auto"/>
		 <RowDefinition/>
	  </Grid.RowDefinitions>
	  <ToolBarTray/>
	  <ToolBarTray HorizontalAlignment="Left">
			<ToolBar ClipToBounds="False" Style="{StaticResource MaterialDesignToolBar}">
			   <ComboBox ItemsSource="{Binding EditTypes}" SelectedItem="{Binding SelectedEditType}" materialDesign:HintAssist.Hint="Edit type" Style="{StaticResource MaterialDesignFloatingHintComboBox}" Margin="20,0" HorizontalAlignment="Left" MinWidth="300">
				  <ComboBox.ItemTemplate>
					 <DataTemplate>
						<TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
					 </DataTemplate>
				  </ComboBox.ItemTemplate>
			   </ComboBox>
			   <TextBox  Width="200" Margin="8,0" materialDesign:HintAssist.Hint="{x:Static properties:Resources.FilterHeroName}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding FilterName, UpdateSourceTrigger=PropertyChanged}"/>
			</ToolBar>
		 </ToolBarTray>
	  <ToolBarTray HorizontalAlignment="Right">
		 <ToolBar ClipToBounds="False" Style="{StaticResource MaterialDesignToolBar}">
			<Menu>
			   <MenuItem Header="{x:Static properties:Resources.Sort}">
				  <MenuItem.Icon>
					 <materialDesign:PackIcon Kind="OrderAlphabeticalAscending" />
				  </MenuItem.Icon>
				  <MenuItem Header="{x:Static properties:Resources.HeroName}" Command="{Binding SortByHeroName}"/>
				  <MenuItem Header="{x:Static properties:Resources.TranscendenceLevel}" Command="{Binding SortByT}"/>
				  <MenuItem Header="{x:Static properties:Resources.SoulImprintLevel}" Command="{Binding SortBySi}"/>
				  <MenuItem Header="{x:Static properties:Resources.ChaserLevel}" Command="{Binding SortByCl}"/>
				  <MenuItem Header="{x:Static properties:Resources.HeroLevel}" Command="{Binding SortByLevel}"/>
				  <MenuItem Header="{x:Static properties:Resources.PetLevel}" Command="{Binding SortByPet}"/>
				  <MenuItem Header="{x:Static properties:Resources.BP}" Command="{Binding SortByBp}"/>
			   </MenuItem>
			</Menu>
			<StackPanel Orientation="Horizontal">
			   <Label Content="{x:Static properties:Resources.ShowNotOwned}" VerticalAlignment="Center"/>
			   <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" Margin="10,0,0,0" IsChecked="{Binding ShowNotOwned}"/>
			</StackPanel>
		 </ToolBar>
	  </ToolBarTray>
	  <ScrollViewer Grid.Row="1" PanningMode="Both">
		 <ItemsControl Focusable="True" ItemsSource="{Binding HeroesView}" Margin="20">
			<ItemsControl.Style>
			   <Style TargetType="ItemsControl">
				  <Setter Property="ItemsPanel">
					 <Setter.Value>
						<ItemsPanelTemplate>
						   <lib:AnimatingTilePanel lib:AnimatingTilePanel.ItemHeight="235" lib:AnimatingTilePanel.ItemWidth="510"/>
						</ItemsPanelTemplate>
					 </Setter.Value>
				  </Setter>
				  <Style.Triggers>
					 <DataTrigger Binding="{Binding IsPerformanceModeEnabled}" Value="True">
						<Setter Property="ItemsPanel">
						   <Setter.Value>
							  <ItemsPanelTemplate>
								 <local:StretchyWrapPanel VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsVirtualizing="True" 
														  DesiredItemHeight="235" DesiredItemWidth="510"/>
							  </ItemsPanelTemplate>
						   </Setter.Value>
						</Setter>
					 </DataTrigger>
				  </Style.Triggers>
			   </Style>
			</ItemsControl.Style>
			<ItemsControl.ItemTemplate>
			   <DataTemplate>
				  <ContentControl Content="{Binding .}" IsTabStop="False">
					 <ContentControl.Style>
						<Style TargetType="ContentControl">
						   <Setter Property="ContentTemplate" Value="{StaticResource SoulImprint}" />
						   <Style.Triggers>
							  <DataTrigger Binding="{Binding SelectedEditType, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="ChaserTranscendence">
								 <Setter Property="ContentTemplate" Value="{StaticResource ChaserTranscendence}" />
							  </DataTrigger>
							  <DataTrigger Binding="{Binding SelectedEditType, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="LevelPetLevel">
								 <Setter Property="ContentTemplate" Value="{StaticResource LevelPetLevel}" />
							  </DataTrigger>
							  <DataTrigger Binding="{Binding SelectedEditType, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Accessory">
								 <Setter Property="ContentTemplate" Value="{StaticResource Accessory}" />
							  </DataTrigger>
							  <DataTrigger Binding="{Binding SelectedEditType, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="ExclusiveWeapon">
								 <Setter Property="ContentTemplate" Value="{StaticResource ExclusiveWeapon}" />
							  </DataTrigger>
							  <DataTrigger Binding="{Binding SelectedEditType, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="Artifact">
								 <Setter Property="ContentTemplate" Value="{StaticResource Artifact}" />
							  </DataTrigger>
						   </Style.Triggers>
						</Style>
					 </ContentControl.Style>
				  </ContentControl>
			   </DataTemplate>
			</ItemsControl.ItemTemplate>
		 </ItemsControl>
	  </ScrollViewer>
   </Grid>
</UserControl>
